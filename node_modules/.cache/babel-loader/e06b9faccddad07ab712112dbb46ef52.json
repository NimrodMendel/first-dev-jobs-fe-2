{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ido\\\\Desktop\\\\ITC_octber_2020\\\\FINAL_PROJECT_LEVEL_2\\\\test2\\\\first-dev-jobs-fe-2\\\\src\\\\components\\\\content\\\\SignUp.jsx\";\nimport React, { useState, useContext } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nimport { useHistory } from \"react-router-dom\"; // ========\n\nexport default function SignUp() {\n  const historyFunc = useHistory();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\"); // const contextData = useContext(mainContext);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [validationError, setValidationError] = useState(\"\");\n  const [validationOK, setValidationOK] = useState(\"\");\n  const [isSignUp, setIsSignUp] = useState(false); // ========\n\n  if (isSignUp) {\n    historyFunc.push(\"./HomePageOpen\");\n  }\n\n  const openModel = () => {\n    setValidationOK(``);\n    setIsOpen(true);\n  };\n\n  const closeModel = () => {\n    setIsOpen(false);\n  };\n\n  const onSignUpSubmit = async event => {// event.preventDefault();\n    // setValidationOK(``);\n    // const newUser = {\n    //   name,\n    //   email,\n    //   phoneNumber,\n    //   password,\n    // };\n    // const isPasswordsInvalid = validatePasswords(newUser, passwordConfirmation);\n    // setValidationError(isPasswordsInvalid);\n    // if (isPasswordsInvalid) {\n    //   return;\n    // } else {\n    //   const userSignIn = await signUpNewUser(newUser);\n    //   if (userSignIn === \"Email already in use\") {\n    //     setValidationError(\"Email already in use, pick new Email or Log in\");\n    //   } else if (userSignIn === \"ok\") {\n    //     setValidationOK(`${name} had been sign in`);\n    //     setName(\"\");\n    //     setEmail(\"\");\n    //     setPassword(\"\");\n    //     setPasswordConfirmation(\"\");\n    //     setPhoneNumber(\"\");\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: openModel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(ReactModal, {\n    ariaHideApp: false,\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: closeModel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \" close\"), validationOK ? /*#__PURE__*/React.createElement(Alert, {\n    className: \"m-auto\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, validationOK) : \"\", validationError ? /*#__PURE__*/React.createElement(Alert, {\n    className: \"m-auto\",\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, validationError) : \"\"), /*#__PURE__*/React.createElement(Card, {\n    className: \"my-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Sign Up\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: event => {\n      onSignUpSubmit(event);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter First and Lest Name\",\n    value: name,\n    required: true,\n    onChange: event => {\n      setName(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"tel\",\n    placeholder: \"Enter phoneNumber\",\n    value: phoneNumber,\n    required: true,\n    onChange: event => {\n      setPhoneNumber(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    required: true,\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    required: true,\n    value: password,\n    onChange: event => {\n      setPassword(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPasswordConfirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \"Password Confirmation\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Re-Enter Password\",\n    required: true,\n    value: passwordConfirmation,\n    onChange: event => {\n      setPasswordConfirmation(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n}","map":{"version":3,"sources":["C:/Users/ido/Desktop/ITC_octber_2020/FINAL_PROJECT_LEVEL_2/test2/first-dev-jobs-fe-2/src/components/content/SignUp.jsx"],"names":["React","useState","useContext","Form","Button","Card","Alert","ReactModal","useHistory","SignUp","historyFunc","name","setName","email","setEmail","password","setPassword","passwordConfirmation","setPasswordConfirmation","phoneNumber","setPhoneNumber","isOpen","setIsOpen","validationError","setValidationError","validationOK","setValidationOK","isSignUp","setIsSignUp","push","openModel","closeModel","onSignUpSubmit","event","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,iBAA1C;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAEA;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,QAAMC,WAAW,GAAGF,UAAU,EAA9B;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,oBAAD,EAAuBC,uBAAvB,IAAkDjB,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C,CAP+B,CAQ/B;;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACsB,eAAD,EAAkBC,kBAAlB,IAAwCvB,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,KAAD,CAAxC,CAb+B,CAc/B;;AAEA,MAAI0B,QAAJ,EAAc;AACZjB,IAAAA,WAAW,CAACmB,IAAZ,CAAiB,gBAAjB;AACD;;AAED,QAAMC,SAAS,GAAG,MAAM;AACtBJ,IAAAA,eAAe,CAAE,EAAF,CAAf;AAEAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAJD;;AAKA,QAAMS,UAAU,GAAG,MAAM;AACvBT,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMU,cAAc,GAAG,MAAOC,KAAP,IAAiB,CACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA1BD;;AA2BA,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAGE,oBAAC,UAAD;AAAY,IAAA,WAAW,EAAE,KAAzB;AAAgC,IAAA,MAAM,EAAET,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEU,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGN,YAAY,gBACX,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAE,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YADH,CADW,GAKX,EAPJ,EAUGF,eAAe,gBACd,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAE,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,eADH,CADc,GAKd,EAfJ,CADF,eAmBE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,eAIE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAGU,KAAD,IAAW;AACnBD,MAAAA,cAAc,CAACC,KAAD,CAAd;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,2BAFd;AAGE,IAAA,KAAK,EAAEtB,IAHT;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAGsB,KAAD,IAAW;AACnBrB,MAAAA,OAAO,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CALF,eAkBE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,KAAK,EAAEhB,WAHT;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAGc,KAAD,IAAW;AACnBb,MAAAA,cAAc,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CAlBF,eA+BE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,KAAK,EAAEtB,KAHT;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAGoB,KAAD,IAAW;AACnBnB,MAAAA,QAAQ,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAWE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CA/BF,eA4CE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAEpB,QAJT;AAKE,IAAA,QAAQ,EAAGkB,KAAD,IAAW;AACnBjB,MAAAA,WAAW,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CA5CF,eAwDE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,+BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,KAAK,EAAElB,oBAJT;AAKE,IAAA,QAAQ,EAAGgB,KAAD,IAAW;AACnBf,MAAAA,uBAAuB,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAvB;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAxDF,eAoEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApEF,CADF,CAJF,CAnBF,CAHF,CADF;AAyGD","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport ReactModal from \"react-modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// ========\r\n\r\nexport default function SignUp() {\r\n  const historyFunc = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  // const contextData = useContext(mainContext);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [validationError, setValidationError] = useState(\"\");\r\n  const [validationOK, setValidationOK] = useState(\"\");\r\n\r\n  const [isSignUp, setIsSignUp] = useState(false);\r\n  // ========\r\n\r\n  if (isSignUp) {\r\n    historyFunc.push(\"./HomePageOpen\");\r\n  }\r\n\r\n  const openModel = () => {\r\n    setValidationOK(``);\r\n\r\n    setIsOpen(true);\r\n  };\r\n  const closeModel = () => {\r\n    setIsOpen(false);\r\n  };\r\n  const onSignUpSubmit = async (event) => {\r\n    // event.preventDefault();\r\n    // setValidationOK(``);\r\n    // const newUser = {\r\n    //   name,\r\n    //   email,\r\n    //   phoneNumber,\r\n    //   password,\r\n    // };\r\n    // const isPasswordsInvalid = validatePasswords(newUser, passwordConfirmation);\r\n    // setValidationError(isPasswordsInvalid);\r\n    // if (isPasswordsInvalid) {\r\n    //   return;\r\n    // } else {\r\n    //   const userSignIn = await signUpNewUser(newUser);\r\n    //   if (userSignIn === \"Email already in use\") {\r\n    //     setValidationError(\"Email already in use, pick new Email or Log in\");\r\n    //   } else if (userSignIn === \"ok\") {\r\n    //     setValidationOK(`${name} had been sign in`);\r\n    //     setName(\"\");\r\n    //     setEmail(\"\");\r\n    //     setPassword(\"\");\r\n    //     setPasswordConfirmation(\"\");\r\n    //     setPhoneNumber(\"\");\r\n    //   }\r\n    // }\r\n  };\r\n  return (\r\n    <>\r\n      <Button onClick={openModel}>Sign Up</Button>\r\n\r\n      <ReactModal ariaHideApp={false} isOpen={isOpen}>\r\n        <div className=\"d-flex\">\r\n          <Button onClick={closeModel}> close</Button>\r\n          {validationOK ? (\r\n            <Alert className=\"m-auto\" variant={\"success\"}>\r\n              {validationOK}\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          {validationError ? (\r\n            <Alert className=\"m-auto\" variant={\"danger\"}>\r\n              {validationError}\r\n            </Alert>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <Card className=\"my-form\">\r\n          <Card.Title className=\"mx-auto\">\r\n            <strong>Sign Up</strong>\r\n          </Card.Title>\r\n          <Card.Body>\r\n            <Form\r\n              onSubmit={(event) => {\r\n                onSignUpSubmit(event);\r\n              }}\r\n            >\r\n              <Form.Group controlId=\"formName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter First and Lest Name\"\r\n                  value={name}\r\n                  required\r\n                  onChange={(event) => {\r\n                    setName(event.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\"></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"phoneNumber\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"tel\"\r\n                  placeholder=\"Enter phoneNumber\"\r\n                  value={phoneNumber}\r\n                  required\r\n                  onChange={(event) => {\r\n                    setPhoneNumber(event.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\"></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                  value={email}\r\n                  required\r\n                  onChange={(event) => {\r\n                    setEmail(event.target.value);\r\n                  }}\r\n                />\r\n                <Form.Text className=\"text-muted\"></Form.Text>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(event) => {\r\n                    setPassword(event.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPasswordConfirmation\">\r\n                <Form.Label>Password Confirmation</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Re-Enter Password\"\r\n                  required\r\n                  value={passwordConfirmation}\r\n                  onChange={(event) => {\r\n                    setPasswordConfirmation(event.target.value);\r\n                  }}\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </ReactModal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}