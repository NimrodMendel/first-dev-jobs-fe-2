{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yaron Cohen\\\\react-bootstrap-simple-sidebar\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport SideBar from \"./components/sidebar/SideBar\";\nimport Content from \"./components/content/Content\";\n\nfunction App() {\n  const [previousWidth, setPreviousWidth] = useState(-1);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isMobile, setIsMobile] = useState(true);\n\n  const updateWidth = () => {\n    const width = window.innerWidth;\n    const widthLimit = 576;\n    const isMobile = width <= widthLimit;\n    const wasMobile = previousWidth <= widthLimit;\n\n    if (isMobile !== wasMobile) {\n      setIsOpen(!isMobile);\n    }\n\n    setPreviousWidth(width);\n  };\n\n  useEffect(() => {\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth());\n  }, []);\n  useEffect(() => {\n    window.removeEventListener(\"resize\", updateWidth());\n  }, []);\n\n  const toggle = () => {\n    setIsOpen(!this.state.isOpen);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    toggle: toggle,\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Content, {\n    toggle: toggle,\n    isOpen: isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Yaron Cohen/react-bootstrap-simple-sidebar/src/App.js"],"names":["React","SideBar","Content","App","previousWidth","setPreviousWidth","useState","isOpen","setIsOpen","isMobile","setIsMobile","updateWidth","width","window","innerWidth","widthLimit","wasMobile","useEffect","addEventListener","removeEventListener","toggle","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,OAAP,MAAoB,8BAApB;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAAC,CAAC,CAAF,CAAlD;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;;AAEC,QAAMK,WAAW,GAAG,MAAM;AACzB,UAAMC,KAAK,GAAGC,MAAM,CAACC,UAArB;AACA,UAAMC,UAAU,GAAG,GAAnB;AACA,UAAMN,QAAQ,GAAGG,KAAK,IAAIG,UAA1B;AACA,UAAMC,SAAS,GAAGZ,aAAa,IAAIW,UAAnC;;AAEA,QAAIN,QAAQ,KAAKO,SAAjB,EAA4B;AAC1BR,MAAAA,SAAS,CAAC,CAACC,QAAF,CAAT;AACD;;AACDJ,IAAAA,gBAAgB,CAACO,KAAD,CAAhB;AACD,GAVA;;AAYDK,EAAAA,SAAS,CAAC,MAAM;AACdN,IAAAA,WAAW;AACXE,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCP,WAAW,EAA7C;AACD,GAHQ,EAGN,EAHM,CAAT;AAKAM,EAAAA,SAAS,CAAC,MAAI;AACZJ,IAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCR,WAAW,EAAhD;AAED,GAHQ,EAGP,EAHO,CAAT;;AAKA,QAAMS,MAAM,GAAG,MAAM;AACnBZ,IAAAA,SAAS,CAAC,CAAC,KAAKa,KAAL,CAAWd,MAAb,CAAT;AACD,GAFD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEa,MAAjB;AAAyB,IAAA,MAAM,EAAEb,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEa,MAAjB;AAAyB,IAAA,MAAM,EAAEb,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAOH;;AAED,eAAeJ,GAAf","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport SideBar from \"./components/sidebar/SideBar\";\r\nimport Content from \"./components/content/Content\";\r\n\r\nfunction App() {\r\n \r\n  const [previousWidth, setPreviousWidth] = useState(-1);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isMobile, setIsMobile] = useState(true);\r\n  \r\n   const updateWidth = () => {\r\n    const width = window.innerWidth;\r\n    const widthLimit = 576;\r\n    const isMobile = width <= widthLimit;\r\n    const wasMobile = previousWidth <= widthLimit;\r\n\r\n    if (isMobile !== wasMobile) {\r\n      setIsOpen(!isMobile);\r\n    }\r\n    setPreviousWidth(width);\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateWidth();\r\n    window.addEventListener(\"resize\", updateWidth());\r\n  }, [])\r\n  \r\n  useEffect(()=>{\r\n    window.removeEventListener(\"resize\", updateWidth());\r\n\r\n  },[])\r\n\r\n  const toggle = () => {\r\n    setIsOpen(!this.state.isOpen);\r\n  };\r\n\r\n    return (\r\n      <div className=\"App wrapper\">\r\n        <SideBar toggle={toggle} isOpen={isOpen} />\r\n        <Content toggle={toggle} isOpen={isOpen} />\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}